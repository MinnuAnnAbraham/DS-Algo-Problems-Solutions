public static int[] findKthMinimumVulnerability(int k, int m, int[] vuls) {
    int n = vuls.length;
    PriorityQueue<Integer> maxHeap = new PriorityQueue<>( (a, b) -> Integer.compare(b, a));
    
    int[] res = new int[n - m + 1];
    LinkedList<Integer> temp = new LinkedList<>();
    for (int i = 0; i < n; i++) {
      maxHeap.add(vuls[i]);
      if (i >= m) 
          maxHeap.remove(vuls[i - m]);
    
      if (i >= m - 1){
          while (maxHeap.size() > k) {
              temp.add(maxHeap.poll());
          }
          res[i - m + 1] = maxHeap.peek();
          int l = 0;
          while(temp.size()>0){
              maxHeap.add(temp.remove(l++));
          }
      }
    }
  
    return res;
  }